{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "acrResourceId": {
            "type": "string"
        },
        "adminApiCaBundle": {
            "type": "string"
        },
        "adminApiClientCertCommonName": {
            "type": "string"
        },
        "armApiCaBundle": {
            "type": "string",
            "defaultValue": ""
        },
        "armApiClientCertCommonName": {
            "type": "string",
            "defaultValue": ""
        },
        "armClientId": {
            "type": "string",
            "defaultValue": ""
        },
        "azureCloudName": {
            "type": "string"
        },
        "billingE2EStorageAccountId": {
            "type": "string",
            "defaultValue": ""
        },
        "billingServicePrincipalId": {
            "type": "string",
            "defaultValue": ""
        },
        "clusterMdmAccount": {
            "type": "string"
        },
        "clusterMdsdAccount": {
            "type": "string"
        },
        "clusterMdsdConfigVersion": {
            "type": "string"
        },
        "clusterMdsdNamespace": {
            "type": "string"
        },
        "clusterParentDomainName": {
            "type": "string"
        },
        "databaseAccountName": {
            "type": "string"
        },
        "disableCosmosDBFirewall": {
            "type": "bool",
            "defaultValue": false
        },
        "extraCosmosDBIPs": {
            "type": "string",
            "defaultValue": ""
        },
        "fpClientId": {
            "type": "string"
        },
        "fpServicePrincipalId": {
            "type": "string"
        },
        "keyvaultDNSSuffix": {
            "type": "string"
        },
        "keyvaultPrefix": {
            "type": "string"
        },
        "mdmFrontendUrl": {
            "type": "string"
        },
        "mdsdEnvironment": {
            "type": "string"
        },
        "portalAccessGroupIds": {
            "type": "string"
        },
        "portalClientId": {
            "type": "string"
        },
        "portalElevatedGroupIds": {
            "type": "string"
        },
        "rpFeatures": {
            "type": "string",
            "defaultValue": ""
        },
        "rpImage": {
            "type": "string"
        },
        "rpMdmAccount": {
            "type": "string"
        },
        "rpMdsdAccount": {
            "type": "string"
        },
        "rpMdsdConfigVersion": {
            "type": "string"
        },
        "rpMdsdNamespace": {
            "type": "string"
        },
        "rpParentDomainName": {
            "type": "string"
        },
        "rpServicePrincipalId": {
            "type": "string"
        },
        "rpVmssCapacity": {
            "type": "int",
            "defaultValue": 3
        },
        "sshPublicKey": {
            "type": "string"
        },
        "storageAccountDomain": {
            "type": "string"
        },
        "subscriptionResourceGroupName": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3"
        },
        "vmssName": {
            "type": "string"
        }
    },
    "resources": [
        {
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "name": "rp-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01"
        },
        {
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "name": "portal-pip",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01"
        },
        {
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'rp-pip')]",
                                "tags": null
                            }
                        },
                        "name": "rp-frontend"
                    },
                    {
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'portal-pip')]",
                                "tags": null
                            }
                        },
                        "name": "portal-frontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "rp-backend"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'rp-lb', 'rp-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb', 'rp-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'rp-lb', 'rp-probe')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 443,
                            "backendPort": 443
                        },
                        "name": "rp-lbrule"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'rp-lb', 'portal-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb', 'rp-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'rp-lb', 'portal-probe-https')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 443,
                            "backendPort": 444
                        },
                        "name": "portal-lbrule"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'rp-lb', 'portal-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb', 'rp-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'rp-lb', 'portal-probe-ssh')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 22,
                            "backendPort": 2222
                        },
                        "name": "portal-lbrule-ssh"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Https",
                            "port": 443,
                            "numberOfProbes": 2,
                            "requestPath": "/healthz/ready"
                        },
                        "name": "rp-probe"
                    },
                    {
                        "properties": {
                            "protocol": "Https",
                            "port": 444,
                            "numberOfProbes": 2,
                            "requestPath": "/healthz/ready"
                        },
                        "name": "portal-probe-https"
                    },
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 2222,
                            "numberOfProbes": 2
                        },
                        "name": "portal-probe-ssh"
                    }
                ]
            },
            "name": "rp-lb",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'portal-pip')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', 'rp-pip')]"
            ]
        },
        {
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                            }
                        },
                        "name": "dbtoken-frontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "rp-backend"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'rp-lb-internal', 'dbtoken-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb-internal', 'rp-backend')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'rp-lb-internal', 'dbtoken-probe')]"
                            },
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "frontendPort": 443,
                            "backendPort": 445
                        },
                        "name": "dbtoken-lbrule"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Https",
                            "port": 445,
                            "numberOfProbes": 2,
                            "requestPath": "/healthz/ready"
                        },
                        "name": "dbtoken-probe"
                    }
                ]
            },
            "name": "rp-lb-internal",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01"
        },
        {
            "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": "[parameters('rpVmssCapacity')]"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[concat('rp-', parameters('vmssName'), '-')]",
                        "adminUsername": "cloud-user",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/cloud-user/.ssh/authorized_keys",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "RedHat",
                            "offer": "RHEL",
                            "sku": "7-LVM",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    },
                    "networkProfile": {
                        "healthProbe": {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'rp-lb', 'rp-probe')]"
                        },
                        "networkInterfaceConfigurations": [
                            {
                                "name": "rp-vmss-nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "rp-vmss-ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet')]"
                                                },
                                                "primary": true,
                                                "publicIPAddressConfiguration": {
                                                    "name": "rp-vmss-pip"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb', 'rp-backend')]"
                                                    },
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'rp-lb-internal', 'rp-backend')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://', parameters('storageAccountDomain'), '/')]"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "rp-vmss-cse",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {},
                                    "protectedSettings": {
                                        "script": "[base64(concat(base64ToString('c2V0IC1leAoK'),'ARMCLIENTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('armClientId')),''')\n','MDMFRONTENDURL=$(base64 -d \u003c\u003c\u003c''',base64(parameters('mdmFrontendUrl')),''')\n','MDSDENVIRONMENT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('mdsdEnvironment')),''')\n','ACRRESOURCEID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('acrResourceId')),''')\n','ADMINAPICLIENTCERTCOMMONNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('adminApiClientCertCommonName')),''')\n','ARMAPICLIENTCERTCOMMONNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('armApiClientCertCommonName')),''')\n','BILLINGE2ESTORAGEACCOUNTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('billingE2EStorageAccountId')),''')\n','CLUSTERMDMACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('clusterMdmAccount')),''')\n','CLUSTERMDSDACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('clusterMdsdAccount')),''')\n','CLUSTERMDSDCONFIGVERSION=$(base64 -d \u003c\u003c\u003c''',base64(parameters('clusterMdsdConfigVersion')),''')\n','CLUSTERMDSDNAMESPACE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('clusterMdsdNamespace')),''')\n','CLUSTERPARENTDOMAINNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('clusterParentDomainName')),''')\n','FPCLIENTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('fpClientId')),''')\n','FPSERVICEPRINCIPALID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('fpServicePrincipalId')),''')\n','PORTALACCESSGROUPIDS=$(base64 -d \u003c\u003c\u003c''',base64(parameters('portalAccessGroupIds')),''')\n','PORTALCLIENTID=$(base64 -d \u003c\u003c\u003c''',base64(parameters('portalClientId')),''')\n','PORTALELEVATEDGROUPIDS=$(base64 -d \u003c\u003c\u003c''',base64(parameters('portalElevatedGroupIds')),''')\n','RPFEATURES=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpFeatures')),''')\n','RPIMAGE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpImage')),''')\n','RPMDMACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdmAccount')),''')\n','RPMDSDACCOUNT=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdsdAccount')),''')\n','RPMDSDCONFIGVERSION=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdsdConfigVersion')),''')\n','RPMDSDNAMESPACE=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpMdsdNamespace')),''')\n','RPPARENTDOMAINNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('rpParentDomainName')),''')\n','DATABASEACCOUNTNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('databaseAccountName')),''')\n','KEYVAULTPREFIX=$(base64 -d \u003c\u003c\u003c''',base64(parameters('keyvaultPrefix')),''')\n','KEYVAULTDNSSUFFIX=$(base64 -d \u003c\u003c\u003c''',base64(parameters('keyvaultDNSSuffix')),''')\n','AZURECLOUDNAME=$(base64 -d \u003c\u003c\u003c''',base64(parameters('azureCloudName')),''')\n','ADMINAPICABUNDLE=''',parameters('adminApiCaBundle'),'''\n','ARMAPICABUNDLE=''',parameters('armApiCaBundle'),'''\n','MDMIMAGE=''/genevamdm:master_20210401.1''\n','LOCATION=$(base64 -d \u003c\u003c\u003c''',base64(resourceGroup().location),''')\n','SUBSCRIPTIONID=$(base64 -d \u003c\u003c\u003c''',base64(subscription().subscriptionId),''')\n','RESOURCEGROUPNAME=$(base64 -d \u003c\u003c\u003c''',base64(resourceGroup().name),''')\n','\n',base64ToString('')))]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": false
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', concat('aro-rp-', resourceGroup().location))]": {}
                }
            },
            "name": "[concat('rp-vmss-', parameters('vmssName'))]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('rpServicePrincipalId'), 'RP / Reader'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]",
                "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]",
                "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb-internal')]",
                "[resourceId('Microsoft.Storage/storageAccounts', substring(parameters('storageAccountDomain'), 0, indexOf(parameters('storageAccountDomain'), '.')))]"
            ]
        },
        {
            "sku": {
                "name": "Standard_LRS"
            },
            "location": "[resourceGroup().location]",
            "name": "[substring(parameters('storageAccountDomain'), 0, indexOf(parameters('storageAccountDomain'), '.'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01"
        },
        {
            "properties": {
                "severity": 2,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
                ],
                "evaluationFrequency": "PT5M",
                "windowSize": "PT15M",
                "targetResourceType": "Microsoft.Network/loadBalancers",
                "criteria": {
                    "allOf": [
                        {
                            "operator": "LessThan",
                            "threshold": 30,
                            "AdditionalProperties": null,
                            "name": "HealthProbeCheck",
                            "metricName": "DipAvailability",
                            "metricNamespace": "microsoft.network/loadBalancers",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "AdditionalProperties": null,
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "actions": [
                    {
                        "actionGroupId": "[resourceId(parameters('subscriptionResourceGroupName'), 'Microsoft.Insights/actionGroups', 'rp-health-ag')]",
                        "webHookProperties": null
                    }
                ]
            },
            "name": "[concat('rp-availability-alert-', resourceGroup().location)]",
            "type": "Microsoft.Insights/metricAlerts",
            "location": "global",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
            ]
        },
        {
            "properties": {
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
                ],
                "evaluationFrequency": "PT15M",
                "windowSize": "PT6H",
                "targetResourceType": "Microsoft.Network/loadBalancers",
                "criteria": {
                    "allOf": [
                        {
                            "operator": "LessThan",
                            "threshold": 67,
                            "AdditionalProperties": null,
                            "name": "HealthProbeCheck",
                            "metricName": "DipAvailability",
                            "metricNamespace": "microsoft.network/loadBalancers",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "AdditionalProperties": null,
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "actions": [
                    {
                        "actionGroupId": "[resourceId(parameters('subscriptionResourceGroupName'), 'Microsoft.Insights/actionGroups', 'rp-health-ag')]",
                        "webHookProperties": null
                    }
                ]
            },
            "name": "[concat('rp-degraded-alert-', resourceGroup().location)]",
            "type": "Microsoft.Insights/metricAlerts",
            "location": "global",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
            ]
        },
        {
            "properties": {
                "severity": 2,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
                ],
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "targetResourceType": "Microsoft.Network/loadBalancers",
                "criteria": {
                    "allOf": [
                        {
                            "operator": "LessThan",
                            "threshold": 33,
                            "AdditionalProperties": null,
                            "name": "HealthProbeCheck",
                            "metricName": "VipAvailability",
                            "metricNamespace": "microsoft.network/loadBalancers",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "AdditionalProperties": null,
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "actions": [
                    {
                        "actionGroupId": "[resourceId(parameters('subscriptionResourceGroupName'), 'Microsoft.Insights/actionGroups', 'rp-health-ag')]",
                        "webHookProperties": null
                    }
                ]
            },
            "name": "[concat('rp-vnet-alert-', resourceGroup().location)]",
            "type": "Microsoft.Insights/metricAlerts",
            "location": "global",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'rp-lb')]"
            ]
        },
        {
            "name": "[concat(parameters('databaseAccountName'), '/Microsoft.Authorization/', guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName')), parameters('billingServicePrincipalId') , 'Billing / DocumentDB Account Contributor'))]",
            "type": "Microsoft.DocumentDB/databaseAccounts/providers/roleAssignments",
            "properties": {
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5bd9cd88-fe45-4216-938b-f97437e15450')]",
                "principalId": "[parameters('billingServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "condition": "[greater(length(parameters('billingServicePrincipalId')), 0)]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {},
            "name": "[concat(resourceGroup().location, '.', parameters('clusterParentDomainName'))]",
            "type": "Microsoft.Network/dnsZones",
            "location": "global",
            "apiVersion": "2018-05-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-nsg')]",
                                "tags": null
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "name": "rp-subnet"
                    }
                ]
            },
            "name": "rp-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01"
        },
        {
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.4.0/22"
                    ]
                },
                "subnets": [
                    {
                        "properties": {
                            "addressPrefix": "10.0.4.0/22",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'rp-pe-nsg')]",
                                "tags": null
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        },
                        "name": "rp-pe-subnet"
                    }
                ]
            },
            "name": "rp-pe-vnet-001",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-pe-vnet-001')]"
                }
            },
            "name": "rp-vnet/peering-rp-pe-vnet-001",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-pe-vnet-001')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
                }
            },
            "name": "rp-pe-vnet-001/peering-rp-vnet",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-pe-vnet-001')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
            ],
            "location": "[resourceGroup().location]"
        },
        {
            "kind": "GlobalDocumentDB",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Strong"
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]"
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "ipRangeFilter": "[if(parameters('disableCosmosDBFirewall'), '', concat('104.42.195.92,40.76.54.131,52.176.6.30,52.169.50.45,52.187.184.26', if(equals(parameters('extraCosmosDBIPs'), ''), '', ','), parameters('extraCosmosDBIPs')))]",
                "isVirtualNetworkFilterEnabled": "[not(parameters('disableCosmosDBFirewall'))]",
                "virtualNetworkRules": "[if(parameters('disableCosmosDBFirewall'), createArray(), createArray(createObject('id', resourceId('Microsoft.Network/virtualNetworks/subnets', 'rp-vnet', 'rp-subnet'))))]",
                "disableKeyBasedMetadataWriteAccess": true
            },
            "name": "[parameters('databaseAccountName')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'rp-vnet')]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "['ARO']"
                },
                "options": {
                    "throughput": "500"
                }
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "AsyncOperations",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    },
                    "defaultTtl": 604800
                },
                "options": {}
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/AsyncOperations')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "Billing",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    }
                },
                "options": {}
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/Billing')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "Monitors",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    },
                    "defaultTtl": -1
                },
                "options": {}
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/Monitors')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "OpenShiftClusters",
                    "partitionKey": {
                        "paths": [
                            "/partitionKey"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": [
                            {
                                "paths": [
                                    "/key"
                                ]
                            },
                            {
                                "paths": [
                                    "/clusterResourceGroupIdKey"
                                ]
                            },
                            {
                                "paths": [
                                    "/clientIdKey"
                                ]
                            }
                        ]
                    }
                },
                "options": {}
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/OpenShiftClusters')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "Portal",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    },
                    "defaultTtl": -1
                },
                "options": {
                    "throughput": "400"
                }
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/Portal')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "properties": {
                "resource": {
                    "id": "Subscriptions",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    }
                },
                "options": {}
            },
            "name": "[concat(parameters('databaseAccountName'), '/', 'ARO', '/Subscriptions')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccountName'), 'ARO')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "name": "[guid(resourceGroup().id, parameters('rpServicePrincipalId'), 'RP / Reader')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "properties": {
                "scope": "[resourceGroup().id]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[parameters('rpServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "apiVersion": "2018-09-01-preview"
        },
        {
            "name": "[guid(resourceGroup().id, 'FP / Network Contributor')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "properties": {
                "scope": "[resourceGroup().id]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[parameters('fpServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "apiVersion": "2018-09-01-preview"
        },
        {
            "name": "[concat(parameters('databaseAccountName'), '/Microsoft.Authorization/', guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName')), parameters('rpServicePrincipalId'), 'RP / DocumentDB Account Contributor'))]",
            "type": "Microsoft.DocumentDB/databaseAccounts/providers/roleAssignments",
            "properties": {
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5bd9cd88-fe45-4216-938b-f97437e15450')]",
                "principalId": "[parameters('rpServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
            ]
        },
        {
            "name": "[concat(resourceGroup().location, '.', parameters('clusterParentDomainName'), '/Microsoft.Authorization/', guid(resourceId('Microsoft.Network/dnsZones', concat(resourceGroup().location, '.', parameters('clusterParentDomainName'))), 'FP / DNS Zone Contributor'))]",
            "type": "Microsoft.Network/dnsZones/providers/roleAssignments",
            "properties": {
                "scope": "[resourceId('Microsoft.Network/dnsZones', concat(resourceGroup().location, '.', parameters('clusterParentDomainName')))]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'befefa01-2a29-4197-83a8-272ff33ce314')]",
                "principalId": "[parameters('fpServicePrincipalId')]",
                "principalType": "ServicePrincipal"
            },
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', concat(resourceGroup().location, '.', parameters('clusterParentDomainName')))]"
            ]
        }
    ]
}
